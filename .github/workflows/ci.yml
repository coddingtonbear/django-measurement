name: CI
on: pull_request

jobs:

  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
      - uses: actions/checkout@v2
      - run: python -m pip install isort
      - run: isort --check-only --diff --recursive .

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
      - uses: actions/checkout@v2
      - run: python -m pip install flake8
      - run: flake8 .

  pydocstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
      - uses: actions/checkout@v2
      - run: python -m pip install pydocstyle
      - run: pydocstyle .

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
      - uses: actions/checkout@v2
      - run: python -m pip install black
      - run: black --check --diff .

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
      - run: sudo apt-get install -y graphviz
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - run: python setup.py develop
      - run: python setup.py build_sphinx -W

  dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
      - run: python -m pip install --upgrade pip setuptools wheel twine readme-renderer
      - uses: actions/checkout@v2
      - run: python setup.py sdist bdist_wheel
      - run: python -m twine check dist/*

  pytest:
    needs:
      - isort
      - pydocstyle
      - flake8
      - black
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        django-version:
          - "2.2"
          - "3.1"
          - "3.2"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - run: python -m pip install --upgrade setuptools wheel codecov
      - run: python -m pip install Django~=${{ matrix.django-version }}
      - run: python setup.py test
      - run: codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
